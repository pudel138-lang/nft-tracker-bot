import asyncio
from flask import Flask, request
from aiogram import Bot, Dispatcher, types
from aiogram.types import Update
import os

# ========== –ù–ê–°–¢–†–û–ô–ö–ò ==========
TOKEN = "–¢–í–û–ô_–¢–û–ö–ï–ù_–û–¢_–ë–û–¢–ê"
WEBHOOK_URL = f"https://nft-tracker-bot.onrender.com/telegram/webhook/{TOKEN}"

# Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã aiogram
bot = Bot(token=TOKEN)
dp = Dispatcher()

# ========== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–û–ú–ê–ù–î ==========
@dp.message()
async def handle_message(message: types.Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ")

# ========== –í–ï–ë–•–£–ö ==========
@app.route(f"/telegram/webhook/{TOKEN}", methods=["POST"])
def telegram_webhook():
    try:
        update_data = request.get_json()
        update = Update.model_validate(update_data)
        asyncio.run(dp.feed_update(bot, update))
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Telegram webhook: {e}")
    return "ok", 200

# ========== –ì–õ–ê–í–ù–ê–Ø –°–¢–†–ê–ù–ò–¶–ê ==========
@app.route("/")
def index():
    return "‚úÖ NFT Tracker Bot is running via Webhook"

# ========== –£–°–¢–ê–ù–û–í–ö–ê –í–ï–ë–•–£–ö–ê ==========
async def set_webhook():
    webhook = await bot.get_webhook_info()
    if webhook.url != WEBHOOK_URL:
        await bot.set_webhook(WEBHOOK_URL)
        print(f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")

# ========== –ó–ê–ü–£–°–ö ==========
if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ Flask + aiogram webhook...")
    asyncio.run(set_webhook())
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 10000)))
